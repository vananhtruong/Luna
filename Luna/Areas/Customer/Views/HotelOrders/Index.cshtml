@model PaginatedList<Luna.Models.HotelOrder>
@{
    ViewData["Title"] = "Order history";
    var userRoles = ViewBag.UserLoggedRoles as List<string>;
}
@if (@TempData["Message"] != null)
{
    <div id="notification" class="notification-container">
        <div class="notification-content">
            <h3 class="text-danger">@TempData["Message"]</h3>
            <button id="closeButton" class="btn btn-orange">OK</button>
        </div>
    </div>
    <style>
        .text-danger {
            margin-top: 40px;
            margin-bottom: 40px;
        }

        .notification-container {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 25%; 
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            text-align: center;
            z-index: 1000;
        }

        .notification-content h1 {
            margin-bottom: 20px;
        }

        .btn-orange {
            background-color: orange;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

            .btn-orange:hover {
                background-color: darkorange;
            }
    </style>
    <script>
        document.getElementById("closeButton").addEventListener("click", function () {
            document.getElementById("notification").style.display = "none";
        });
    </script>
}
<div>
    <h1 class="center-form">List of booking history</h1>

    <form asp-action="Index" method="get" class="">
        <div class="form-actions">
            <p>
                <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Enter search information" />
                <input type="submit" value="Search" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to full list</a>
            </p>
        </div>
    </form>
</div>

<div class="table-container">
    <table class="center-table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IDSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">OrderId</a>
                </th>
                <th>
                    OrderDate
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">OrderStatus</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DepositsSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Deposits</a>
                </th>
                <th style="width: 300px">
                    
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderStatus)
                    </td>
                    <td>
                        @String.Format("{0:N0}", item.Deposits)
                    </td>
                    <td style="text-align: left;">
                        @if (item.OrderStatus == "ordered" && (userRoles == null || userRoles.Contains("Admin") || userRoles.Contains("Receptionist")))
                        {
                            <a asp-area="Staff" asp-controller="DemoRO" asp-action="Index" asp-route-id="@item.OrderId" class="btn btn-warning">Confirm</a>

                        }                            
                        <a asp-action="Details" asp-route-id="@item.OrderId" class="btn btn-info">Details</a>
                        @if (userRoles != null && userRoles.Contains("Customer"))
                        {
                            @if (item.OrderStatus == "ordered")
                            {
                                <a asp-action="Delete" asp-route-id="@item.OrderId" class="btn btn-danger">Cancel</a>
                            }     
                        }                       
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="pagination-container">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <div class="page-number">
        @(Model.PageIndex)
    </div>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.TotalPages)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        @(Model.TotalPages)
    </a>
</div>

<style>
    .pagination-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }

    .page-number {
        margin: 0 10px;
        border: 1px solid black;
        border-radius: 0;
        padding: 5px 10px;
        display: inline-block;
    }

    .table {
        /* margin-left: 30px; */
        /*  margin-right: 60px; */
        width: 80%;
    }

    .table-container {
        display: flex;
        justify-content: center;
    }

    .center-table {
        border-collapse: collapse;
        width: 80%;
        margin: auto;
    }

    .center-table th, .center-table td {
        border: 1px solid black; 
        padding: 8px;
        text-align: left;
        text-align: center;
        vertical-align: middle;
    }

    .center-table th {
        background-color: #f2f2f2; /* Màu nền cho tiêu đề bảng */
    }

    .center-form {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column; /* Điều chỉnh hướng của các phần tử bên trong */
        margin: 20px auto; /* Tạo khoảng cách trên và dưới, và căn giữa theo chiều ngang */
    }

    .form-actions {        
        width: 80%;
        margin: 0px auto;
    }
    .form-actions p{
        text-align: right;        
    }

    .form-actions input[type="text"] {
        width: 30%;
    }

    .center-form .btn {
        margin-right: 10px; /* Tạo khoảng cách giữa nút submit và liên kết */
    }
</style>
