@model Luna.Models.OrderModel
@{
    ViewData["Title"] = "Create";
    var roomTypeInfos = ViewBag.RoomInfos as List<(string?, int, double, string?, double, int)>;
    var serviceInfos = ViewBag.ServiceInfos as List<(string, int?, double, string)>;
}

@if (@TempData["Message"] != null)
{
    <div id="notification" class="notification-container">
        <div class="notification-content">
            <h3 class="text-danger">@TempData["Message"]</h3>
            <button id="closeButton" class="btn btn-orange">OK</button>
        </div>
    </div>
    <style>
        .text-danger{
            margin-top: 40px;
            margin-bottom: 40px;
        }

        .notification-container {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 25%; /* 1/4 màn hình */
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            text-align: center;
            z-index: 1000; 
        }

        .notification-content h1 {
            margin-bottom: 20px;
        }

        .btn-orange {
            background-color: orange;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        .btn-orange:hover {
            background-color: darkorange;
        }
    </style>
    <script>
        document.getElementById("closeButton").addEventListener("click", function () {
            document.getElementById("notification").style.display = "none";
        });
    </script>
}


<body>
    <form asp-action="CreateFinal">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <input asp-for="HotelOrder.OrderStatus" type="hidden" value="ordered" />
            <span asp-validation-for="HotelOrder.OrderStatus" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input asp-for="HotelOrder.Deposits" class="form-control" value="@ViewBag.TongValue" type="hidden" />
            <span asp-validation-for="HotelOrder.Deposits" class="text-danger"></span>
        </div>
        <div class="order-list">
            <div class="order-list-title">Hotel Order</div>
            <div class="order-date">Estimated check-in date: @ViewBag.CheckIn</div>
            <div class="order-date">Estimated check-out date: @ViewBag.CheckOut</div>
            <div class="order-item">
                @if (roomTypeInfos != null)
                {
                    <div class="TypeOrder">Room booking information:</div>
                    @foreach (var roomInfo in roomTypeInfos)
                    {
                        <div class="product">
                            <img src="@roomInfo.Item4" alt="ảnh phòng">
                            <div class="product-info">
                                <div class="product-name-price">
                                    <div class="product-name">@roomInfo.Item1</div>
                                    <div class="product-price">@String.Format("{0:N0}", @roomInfo.Item3) ₫</div>
                                </div>
                                <div class="product-details">
                                    <div class="product-quantity">Number of room: @roomInfo.Item2</div>
                                    <div class="product-discount">Discount: @roomInfo.Item5%</div>
                                </div>
                                <div class="product-details">
                                    <div class="product-quantity">Number of days of hotel stay booked: @ViewBag.Stay</div>
                                    <div class="product-quantity">Number of days of discount: @roomInfo.Item6</div>
                                </div>
                                @* <div class="product-total">Sub-total: @(roomInfo.Item3 * roomInfo.Item2 * (1 - (roomInfo.Item5 / 100)) * @ViewBag.Stay)₫</div> *@
                            </div>
                        </div>
                    }
                    <div class="order-total">Total room fee: @String.Format("{0:N0}", @ViewBag.TotalRoom) ₫</div>
                }
                
            </div>
            
                <div class="order-item">
                @if (serviceInfos != null)
                {
                    <div class="TypeOrder">Service booking information:</div>
                    @foreach (var service in serviceInfos)
                    {
                        <div class="product">
                            <img src="@service.Item4" alt="ảnh service">
                            <div class="product-info">
                                <div class="product-name-price">
                                    <div class="product-name">@service.Item1</div>
                                    <div class="product-price">@String.Format("{0:N0}", @service.Item3) ₫</div>
                                </div>
                                <div class="product-details">
                                    <div class="product-quantity">Quantity: @service.Item2</div>

                                </div>
                                @* <div class="product-total">Sub-total: @(service.Item3 * service.Item2)₫</div> *@
                            </div>
                        </div>
                    }

                    <div class="order-total">Total service fee:  @String.Format("{0:N0}", @ViewBag.TotalService) ₫</div>

                   
                }
                </div>
            

            <div class="order-total" style="font-size:40px;">Total: @String.Format("{0:N0}", @ViewBag.TongValue) ₫</div>
            <br />
            <br />
            <br />
            <div class="buttons">
                <button class="button button-back">
                    <a asp-action="CheckSessionData" asp-area="Customer" asp-controller="Order">Back to Order Service</a>
                </button>
                <button class="button button-confirm btn-primary" type="submit">
                    Payment confirmation
                </button>
            </div>
        </div>
    </form>
</body>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f9f9f9;
        padding: 20px;
    }

    .TypeOrder {
        font-size: 25px;
        color: #000;
        margin-bottom: 10px;
    }

    .order-list {
        max-width: 66.66%; /* Chiếm 2/3 màn hình */
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

        .order-list img.header-img {
            width: 100%;
            height: 150px;
            object-fit: cover;
            border-radius: 8px 8px 0 0;
        }

    .order-list-title {
        text-align: center;
        font-size: 50px;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .order-item {
        border-bottom: 1px solid #ddd;
        padding: 10px 0;
        position: relative;
    }

    .order-date {
        font-size: 20px;
        color: #999;
        margin-bottom: 10px;
    }

    .product {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        padding: 10px;
        background-color: #f1f1f1;
        border-radius: 8px;
        margin-bottom: 10px;
        position: relative;
    }

        .product img {
            width: 30%;
            height: auto;
            border-radius: 8px;
            margin-right: 10px;
        }

    .product-info {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .product-name-price {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
    }

    .product-name {
        font-size: 30px;
        font-weight: bold;
    }

    .product-price {
        font-size: 30px;
        color: #333;
    }

    .product-details {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px;
    }

    .product-quantity, .product-discount {
        font-size: 16px;
        color: #666;
    }

    .product-discount {
        color: #d9534f;
    }

    .product-total {
        position: absolute;
        bottom: 10px;
        right: 10px;
        font-size: 18px;
        font-weight: bold;
        color: #000;
    }

    .order-total {
        text-align: right;
        font-size: 20px;
        margin-top: 20px;
        font-weight: bold;
    }

    .buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .button {
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .button-confirm {
        background-color: #ff9800;
        color: #fff;
    }

        .button-confirm:hover {
            background-color: #e68900;
        }

    .button-back {
        background-color: #fff;
        color: #333;
    }

        .button-back:hover {
            background-color: #ececec;
        }

    .half-image {
        width: 900px; /* Chiều rộng của ảnh */
        height: 150px; /* Chiều cao của ảnh (nửa chiều cao ban đầu) */
        overflow: hidden; /* Chỉ hiển thị phần nằm trong khung */
    }

    .header-img {
        clip: rect(0px, 950px, 250px, 0px); /* cắt ảnh để chỉ hiển thị 150px đầu tiên */
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}